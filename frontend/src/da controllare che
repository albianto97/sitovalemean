üß† 5Ô∏è‚É£ Controlla che AuthService contenga:

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { BehaviorSubject, Observable } from 'rxjs';
import { jwtDecode } from 'jwt-decode';

@Injectable({ providedIn: 'root' })
export class AuthService {
  private apiUrl = 'http://localhost:3000/api/auth';
  private loggedIn$ = new BehaviorSubject<boolean>(this.hasToken());
  private role$ = new BehaviorSubject<string | null>(this.getRoleFromToken());

  constructor(private http: HttpClient) {}

  private hasToken(): boolean {
    return !!localStorage.getItem('token');
  }

  private getRoleFromToken(): string | null {
    const token = localStorage.getItem('token');
    if (!token) return null;
    try {
      const payload: any = jwtDecode(token);
      return payload.role;
    } catch {
      return null;
    }
  }

  login(credentials: any): Observable<any> {
    return new Observable((observer) => {
      this.http.post(`${this.apiUrl}/login`, credentials).subscribe({
        next: (res: any) => {
          localStorage.setItem('token', res.token);
          this.loggedIn$.next(true);
          this.role$.next(this.getRoleFromToken());
          observer.next(res);
          observer.complete();
        },
        error: (err) => observer.error(err)
      });
    });
  }

  logout(): void {
    localStorage.removeItem('token');
    this.loggedIn$.next(false);
    this.role$.next(null);
  }

  // üîÅ Osservabili pubblici
  isLoggedIn$(): Observable<boolean> {
    return this.loggedIn$.asObservable();
  }

  isAdmin$(): Observable<boolean> {
    return this.role$.asObservable().pipe(map(role => role === 'admin'));
  }

  getUserProfile(): Observable<any> {
    return this.http.get(`${this.apiUrl}/me`);
  }
}



------------------------------------------------
üß† 4Ô∏è‚É£ Servizi coinvolti

Assicurati che il tuo AuthService abbia questo metodo:

getUserProfile(): Observable<any> {
  return this.http.get(`${this.apiUrl}/me`);
}


e che nel ReservationService ci sia:

getMyReservations(): Observable<any> {
  return this.http.get(`${this.apiUrl}/my`);
}
