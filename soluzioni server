OPZIONE 1 PERFETTA SE FUNZIONA
---

## 💸 OPZIONE 1 – **Tutto Gratis (con limiti)**

| Servizio             | Scopo                    | Costo                     | Note                                             |
| -------------------- | ------------------------ | ------------------------- | ------------------------------------------------ |
| **Render**           | Hosting backend Node.js  | ✅ Gratis (750 ore/mese)   | Si “addormenta” dopo inattività (sleep mode)     |
| **MongoDB Atlas**    | Database cloud           | ✅ Gratis (Shared Cluster) | Fino a 512 MB, ottimo per dev                    |
| **Vercel / Netlify** | Hosting frontend Angular | ✅ Gratis                  | Build automatici da GitHub, perfetti per Angular |

> 🔧 Costo totale: **0€/mese**
> ✅ Ideale per: test, portfolio personale, progetti senza traffico elevato

---

## 💼 OPZIONE 2 – **Server VPS Economico (Tutto in uno)**

### Server economici dove puoi installare tutto (Mongo, Node, Angular):

| Provider         | Piano base    | Costo stimato | Note                                   |
| ---------------- | ------------- | ------------- | -------------------------------------- |
| **Hetzner**      | VPS CX11      | 3,49 €/mese   | 1 vCPU, 2 GB RAM, SSD, molto stabile   |
| **Contabo**      | VPS S         | 4,49 €/mese   | Spazio enorme, meno RAM inizialmente   |
| **DigitalOcean** | Droplet base  | 5 €/mese      | 1 vCPU, 1 GB RAM, ottimo per iniziare  |
| **OVHcloud**     | VPS Essential | 5 €/mese      | Provider europeo, supporto in italiano |

> 🔧 Costo totale: **\~5€/mese**
> ✅ Ideale per: siti con traffico costante o uso pro

---

## 🧩 OPZIONE 3 – **Soluzione ibrida (economica ma stabile)**

| Servizio          | Scopo                | Costo        |
| ----------------- | -------------------- | ------------ |
| **Vercel**        | Frontend Angular     | ✅ Gratis     |
| **Render (Paid)** | Backend Node/Express | 🟡 \~7€/mese |
| **MongoDB Atlas** | Database cloud       | ✅ Gratis     |

> 🔧 Costo totale: **\~7€/mese**
> ✅ Ideale per: app live, responsive e sempre online

---

## 📌 Riepilogo

| Tipo hosting                                       | Costo mensile | Pro                                     | Contro                        |
| -------------------------------------------------- | ------------- | --------------------------------------- | ----------------------------- |
| **Tutto gratis (Render + Vercel + MongoDB Atlas)** | 0 €           | Nessuna spesa, perfetto per test        | Sleep mode se inattivo        |
| **VPS economico (Hetzner, DO, Contabo)**           | \~5 €         | Sempre attivo, controlli tutto          | Devi configurare tutto a mano |
| **Soluzione ibrida (Render+Vercel con tier Pro)**  | \~7 €         | Comodo, stabile, diviso in microservizi | Più configurazioni da gestire |

---


Ottima domanda ✅
Pubblicare un sito **full-stack** (frontend + backend + database MongoDB) richiede alcuni passaggi chiave. Ti spiego tutto passo-per-passo, con le varie opzioni 👇

---

## 🔹 1️⃣ Acquistare un dominio (facoltativo ma consigliato)

Un dominio è l’indirizzo del tuo sito (es. `www.miosito.it`).

* Puoi acquistarlo da provider come:

  * **Namecheap**, **Google Domains**, **OVH**, **Aruba**, **GoDaddy**, ecc.
* Dopo averlo acquistato, potrai **puntarlo** (tramite DNS) al server dove ospiti il tuo progetto.

> 👉 Puoi anche pubblicare il sito **senza dominio** all’inizio, usando un URL gratuito (es. `https://nome-progetto.vercel.app` o `https://mio-progetto.onrender.com`).

---

## 🔹 2️⃣ Scegli dove ospitare il sito

Hai due parti:

* **Frontend** (React, Vue, Angular, ecc.)
* **Backend** (Node.js / Express, ecc.)
* **Database** (MongoDB)

### ✅ Soluzione più comune e facile:

**Frontend** → su **Vercel** o **Netlify**
**Backend** → su **Render**, **Railway**, **Heroku**, o **VPS (es. Hetzner, DigitalOcean)**
**Database** → su **MongoDB Atlas** (cloud gratuito e ottimo)

---

## 🔹 3️⃣ Configura e prepara i file

### 📦 Frontend

* Fai il build:

  ```bash
  npm run build
  ```
* Questo comando genera una cartella `dist/` o `build/` con i file statici.
* Carica questi file su:

  * **Vercel** (basta collegare il repo GitHub)
  * **Netlify**
  * oppure su un **bucket statico** tipo AWS S3

### ⚙️ Backend

* Crea un file `Procfile` (se usi Heroku) o imposta il comando di start:

  ```bash
  npm start
  ```
* Imposta le **variabili d’ambiente** (es. `MONGO_URI`, `PORT`, `JWT_SECRET`, ecc.)
* Carica il progetto su:

  * **Render.com** (gratuito e super semplice)
  * **Railway.app**
  * oppure un tuo server VPS.

### 💾 Database (MongoDB)

* Se non vuoi gestire un server database tu, usa **MongoDB Atlas**:

  1. Vai su [https://cloud.mongodb.com](https://cloud.mongodb.com)
  2. Crea un cluster gratuito.
  3. Ottieni la stringa di connessione tipo:

     ```
     mongodb+srv://utente:password@cluster.mongodb.net/nomedb
     ```
  4. Inseriscila nel tuo `.env` nel backend:

     ```
     MONGO_URI=mongodb+srv://...
     ```

---

## 🔹 4️⃣ Collega tutto

* Il **frontend** dovrà chiamare l’API del backend:
  Esempio:

  ```js
  fetch('https://mio-backend.onrender.com/api/...') 
  ```
* Aggiorna gli URL nel codice prima di pubblicare.

---

## 🔹 5️⃣ (Facoltativo) Collega il dominio

Una volta tutto online:

1. Vai nel pannello DNS del dominio.
2. Aggiungi un record **CNAME** o **A** che punti al tuo hosting.

   * Esempio: `www → cname.vercel-dns.com`
3. Aspetta qualche ora per la propagazione.

---

## ⚡ In sintesi:

| Parte                 | Dove pubblicare            | Tipo               |
| --------------------- | -------------------------- | ------------------ |
| Frontend              | Vercel / Netlify           | Statico            |
| Backend               | Render / Railway           | Server Node.js     |
| Database              | MongoDB Atlas              | Cloud DB           |
| Dominio (facoltativo) | Namecheap / Google Domains | DNS personalizzato |

---


