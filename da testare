| `ProductDetailComponent`    | ⚠️ opzionale | Mostrare dettagli singolo prodotto  |
| `UserService`        | ⚙️ opzionale | Update profilo (modifica della password) |

---

## 🧠 **4️⃣ Logica mancante o da testare**

Ecco cosa **ti manca solo da completare o verificare**:

| Area                                 | Cosa fare                                                                                             | Tipo                |
| ------------------------------------ | ----------------------------------------------------------------------------------------------------- | ------------------- |
| 🧩 **Prenotazione prodotto**         | verificare che clic su “Prenota” → chiami `POST /api/reservations/add/:productId` e aggiorni quantità | test + collegamento |
| 🧩 **Rimozione prenotazione**        | idem con `DELETE /api/reservations/remove/:productId`                                                 | test                |
| 💬 **Messaggi utente**               | aggiungere messaggi Bootstrap (toast o alert) al successo/errore (es. “Prodotto prenotato!”)          | UX migliorata       |
| 🧑‍💻 **Admin - Modifica prodotto**  | assicurarsi che `PUT /api/products/:id` funzioni nel form di modifica                                 | test                |
| 📷 **Immagini prodotti (opzionale)** | se vuoi permettere upload immagini in futuro                                                          | feature extra       |
| 📊 **Dashboard admin (opzionale)**   | grafici/statistiche prenotazioni                                                                      | extra feature       |

---

## 🔐 **5️⃣ Autenticazione e Guardie**

* `AuthGuard` → protegge `/dashboard`, `/cart`, `/profile` ✅
* `AdminGuard` → protegge `/admin` ✅
* `TokenInterceptor` → aggiunge automaticamente `Authorization: Bearer <token>` ✅

💡 Ti basta solo verificare che siano **registrati nel `AppModule`** come provider:

```ts
providers: [
  AuthGuard,
  AdminGuard,
  {
    provide: HTTP_INTERCEPTORS,
    useClass: TokenInterceptor,
    multi: true
  }
]
```

---

## 🧪 **6️⃣ Test rapido finale (checklist)**

| Step                      | Cosa aspettarti                          |
| ------------------------- | ---------------------------------------- |
| 🧾 Registrazione utente   | Salva utente in Mongo + redirect a login |
| 🔐 Login utente           | Genera token + Navbar aggiornata         |
| 👤 Profilo                | Mostra info utente correnti              |
| 🎁 Lista prodotti         | Mostra solo prodotti disponibili         |
| 🛒 Prenotazione           | Decrementa quantità prodotto nel DB      |
| 🧹 Rimozione prenotazione | Ripristina quantità prodotto             |
| 🧑‍💼 Admin CRUD          | Crea, aggiorna, elimina prodotti         |
| 🚪 Logout                 | Rimuove token + Navbar aggiornata        |

---

## 🧩 **7️⃣ Funzionalità opzionali future**

Una volta completati i test, puoi aggiungere:

* ✉️ Email di conferma con **Nodemailer**
* ⏰ Prenotazioni a tempo con **cron job**
* 📊 Dashboard admin con grafici (es. **Chart.js** o **Recharts**)
* 🌗 Tema **Dark/Light mode**
* 🌍 Traduzione multi-lingua (con `ngx-translate`)

---

## 🧭 **In sintesi**

✅ Tutti i **file essenziali e logiche di base** ci sono.
🔍 Ti manca solo **verificare l’integrazione** tra frontend e backend (soprattutto prenotazioni e CRUD admin).
💄 Poi puoi dedicarti ai **miglioramenti visivi e UX**.

